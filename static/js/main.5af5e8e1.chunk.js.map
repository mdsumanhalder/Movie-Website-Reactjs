{"version":3,"sources":["Context/MovieContext.js","components/GlobalComponents/Container.js","components/Hero/HeroNav/HeroNavLogo.js","components/Hero/HeroNav/HeroNavLink.js","components/Hero/HeroNav/HeroNavMenu.js","components/Hero/HeroNav/HeroNavSearch.js","components/Hero/HeroNav/HeroNav.js","components/GlobalComponents/Loader.js","components/Movies/Movies.js","components/Movies/MoviesPagination.js","components/Popular/Popular.js","components/Output/Output.js","components/Hero/Hero.js","App.js","serviceWorker.js","index.js"],"names":["MovieContext","createContext","MovieState","children","useState","hiddenMenu","setHiddenMenu","activeLink","setActiveLink","showPagination","setShowPagination","isLoading","setIsLoading","movies","setMovies","search","setSearch","currentPage","setCurrentPage","popularMovies","setPopularMovies","API_KEY","getMovies","a","fetch","response","json","data","trim","handleSearch","e","preventDefault","searchResponse","searchData","getPopularMovies","popularMoviesResponse","popularMoviesData","useEffect","loadingTimeout","setTimeout","clearTimeout","Provider","value","newPage","direction","styles","css","Container","className","HeroNavLogo","HeroNavLink","btnText","useContext","style","color","onClick","HeroNavMenu","HeroNavSearch","onSubmit","type","placeholder","onChange","target","HeroNav","id","Loader","Movies","results","length","map","movieItem","index","key","src","poster_path","alt","MoviesPagination","Fragment","cursor","background","PopularMovies","popularMovieItem","Output","Popular","Hero","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5af5e8e1.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\n\nexport const MovieContext = createContext();\n\nexport const MovieState = ({ children }) => {\n\n  const [hiddenMenu, setHiddenMenu] = useState(true);\n\n  const [activeLink, setActiveLink] = useState(\"Popular\");\n\n  const [showPagination, setShowPagination] = useState(true);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [movies, setMovies] = useState([]);\n\n  const [search, setSearch] = useState(\"\");\n \n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  const API_KEY = \"9d4fbae6d45a1f406cc115a66a4de03d\";\n\n  const getMovies = async () => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage}`\n    );\n    const data = await response.json();\n    if (search.trim() === \"\") {\n      setMovies(data);\n    }\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (search.trim() === \"\") {\n      return;\n    }\n    const searchResponse = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=${currentPage}`\n    );\n    const searchData = await searchResponse.json();\n    setMovies(searchData);\n    setShowPagination(false);\n  };\n\n  const newPage = (direction) => {\n    if (direction === \"next\") {\n      setCurrentPage(currentPage + 1);\n      setIsLoading(true);\n    } else if (direction === \"previous\" && currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getPopularMovies = async () => {\n    const popularMoviesResponse = await fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=3`\n    );\n    const popularMoviesData = await popularMoviesResponse.json();\n    setPopularMovies(popularMoviesData);\n  };\n\n  useEffect(() => {\n    getPopularMovies();\n  }, []);\n\n  useEffect(() => {\n    if (search.trim() === \"\") {\n      setShowPagination(true);\n    }\n    getMovies();\n  }, [search, currentPage]);\n\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 1300);\n    return () => clearTimeout(loadingTimeout);\n  }, [movies, currentPage]);\n\n  return (\n    <MovieContext.Provider\n      value={{\n        movies,\n        setMovies,\n        search,\n        setSearch,\n        activeLink,\n        setActiveLink,\n        handleSearch,\n        currentPage,\n        setCurrentPage,\n        newPage,\n        showPagination,\n        setShowPagination,\n        isLoading,\n        setIsLoading,\n        popularMovies,\n        setPopularMovies,\n        hiddenMenu,\n        setHiddenMenu,\n      }}\n    >\n      {children}\n    </MovieContext.Provider>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nconst Container = ({ children }) => (\n  <div css={styles} className=\"container\">\n    {children}\n  </div>\n);\n\nconst styles = css`\n  width: 100%;\n  max-width: 1300px;\n  margin: 0 auto;\n`;\n\nexport default Container;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nconst HeroNavLogo = () => <h2 css={styles}>Movie-World</h2>;\n\nconst styles = css`\n  font-size: 22px;\n  color: #cb6ad2;\n  font-weight: 900;\n  user-select: none;\n`;\n\nexport default HeroNavLogo;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../../Context/MovieContext\";\n\nconst HeroNavLink = ({ btnText }) => {\n  const { activeLink, setActiveLink, setHiddenMenu } = useContext(MovieContext);\n\n  return (\n    <button\n      style={{ color: activeLink === btnText ? \"#f9a5ff\" : \"#fff\" }}\n      css={styles}\n      onClick={() => {\n        setActiveLink(btnText);\n        setHiddenMenu(true);\n      }}\n    >\n      {btnText}\n    </button>\n  );\n};\n\nconst styles = css`\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: 22px;\n  margin-right: 24px;\n  font-weight: 700;\n  cursor: pointer;\n  user-select: none;\n  @media (max-width: 860px) {\n    font-size: 40px;\n  }\n`;\n\nexport default HeroNavLink;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../../Context/MovieContext\";\nimport HeroNavLink from \"./HeroNavLink\";\n\nconst HeroNavMenu = () => {\n  const { hiddenMenu } = useContext(MovieContext);\n\n  return (\n    <div css={styles} className={(hiddenMenu ? \"hidden\" : \"\") + \" heroNavMenu\"}>\n      <HeroNavLink btnText=\"Popular\" />\n      <HeroNavLink btnText=\"All Movies\" />\n    </div>\n  );\n};\n\nconst styles = css`\n  padding-left: 80px;\n  @media (max-width: 860px) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 1;\n    min-height: 100vh;\n    background: rgba(0, 0, 0, 0.8);\n    padding-left: 0;\n    padding: 20px 50px;\n    width: 100%;\n    max-width: 340px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    transition: all 800ms ease-in-out;\n    &.hidden {\n      left: -600px;\n      opacity: 0;\n    }\n  }\n`;\n\nexport default HeroNavMenu;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../../Context/MovieContext\";\n\nconst HeroNavSearch = () => {\n  const { search, setSearch, handleSearch, activeLink } = useContext(\n    MovieContext\n  );\n\n  return (\n    <form css={styles} onSubmit={handleSearch}>\n      {activeLink !== \"Popular\" && (\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      )}\n    </form>\n  );\n};\n\nconst styles = css`\n  height: 40px;\n  min-height: 40px;\n  input {\n    border: none;\n    outline: none;\n    border-radius: 50px;\n    border: 1px solid #2c2f39;\n    background: transparent;\n    padding: 10px 16px;\n    width: 260px;\n    color: #f9a5ff;\n    &::placeholder {\n      color: #f9a5ff;\n      letter-spacing: 1px;\n    }\n  }\n  @media (max-width: 860px) {\n    input {\n      width: 220px;\n    }\n  }\n`;\n\nexport default HeroNavSearch;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../../Context/MovieContext\";\nimport Container from \"../../GlobalComponents/Container\";\nimport HeroNavLogo from \"./HeroNavLogo\";\nimport HeroNavMenu from \"./HeroNavMenu\";\nimport HeroNavSearch from \"./HeroNavSearch\";\n\nconst HeroNav = () => {\n  const { hiddenMenu, setHiddenMenu } = useContext(MovieContext);\n\n  return (\n    <nav css={styles}>\n      <Container>\n        <div className=\"wrapper\">\n          <HeroNavLogo />\n          <HeroNavMenu />\n        </div>\n        <HeroNavSearch />\n        <i\n          onClick={() => setHiddenMenu(!hiddenMenu)}\n          id=\"burgerMenu\"\n          className={hiddenMenu ? \"fas fa-bars\" : \"fas fa-times\"}\n        ></i>\n      </Container>\n    </nav>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  min-height: 80px;\n  padding: 20px 0;\n  background: blue;\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    .wrapper {\n      display: flex;\n      align-items: center;\n    }\n    #burgerMenu {\n      color: #f9a5ff;\n      cursor: pointer;\n      display: none;\n    }\n  }\n  @media (max-width: 860px) {\n    .container {\n      #burgerMenu {\n        display: block;\n      }\n    }\n  }\n  @media (max-width: 1365px) {\n    .container {\n      max-width: 90%;\n    }\n  }\n`;\n\nexport default HeroNav;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\n\nconst Loader = () => <div css={styles} className=\"loader\"></div>;\n\nconst styles = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 50px;\n  height: 10px;\n  background: #3498db;\n  border-radius: 5px;\n  animation: spinner 1.8s ease-in-out infinite;\n  &:before,\n  &:after {\n    position: absolute;\n    display: block;\n    content: \"\";\n    animation: spinner 1.8s ease-in-out infinite;\n    height: 10px;\n    border-radius: 5px;\n  }\n  &:before {\n    top: -20px;\n    left: 10px;\n    width: 40px;\n    background: #ef4836;\n  }\n  &:after {\n    bottom: -20px;\n    width: 35px;\n    background: #f5ab35;\n  }\n\n  @keyframes spinner {\n    0% {\n      transform: translateX(40px);\n    }\n\n    50% {\n      transform: translateX(-30px);\n    }\n    100% {\n      transform: translateX(40px);\n    }\n  }\n`;\n\nexport default Loader;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\nimport Loader from \"../GlobalComponents/Loader\";\n\nconst Movies = () => {\n  const { movies, isLoading } = useContext(MovieContext);\n\n  return (\n    <div css={styles} className=\"movies\">\n      <Container>\n        {movies.results && movies.results.length === 0 && (\n          <h1 className=\"error\">Result not found</h1>\n        )}\n        {!isLoading ? (\n          movies.results &&\n          movies.results.map((movieItem, index) => (\n            <img\n              key={index}\n              src={`https://image.tmdb.org/t/p/w400/${movieItem.poster_path}`}\n              alt=\"poster\"\n            />\n          ))\n        ) : (\n          <Loader />\n        )}\n      </Container>\n    </div>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  .container {\n    &:nth-child(1) {\n      height: 68vh;\n      overflow-y: scroll;\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      &::-webkit-scrollbar {\n        width: 0;\n      }\n      .error {\n        font-size: 38px;\n        color: red;\n        height: 32px;\n      }\n    }\n    img {\n      width: 100%;\n      max-width: 240px;\n      height: 360px;\n      margin: 10px 0;\n    }\n  }\n  @media (max-width: 600px) {\n    .container {\n      img {\n        max-width: 100%;\n        height: 500px;\n      }\n    }\n  }\n  @media (min-width: 601px) and (max-width: 854px) {\n    .container {\n      img {\n        max-width: 48%;\n      }\n    }\n  }\n  @media (min-width: 855px) and (max-width: 1144px) {\n    .container {\n      img {\n        max-width: 31%;\n      }\n    }\n  }\n  @media (min-width: 1145px) and (max-width: 1365px) {\n    .container {\n      img {\n        max-width: 23.4%;\n      }\n    }\n  }\n`;\n\nexport default Movies;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React, { useContext } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\n\nconst MoviesPagination = () => {\n  const { newPage, currentPage, showPagination } = useContext(MovieContext);\n\n  return (\n    <div css={styles} className=\"moviesPagination\">\n      {showPagination && (\n        <Container>\n          <React.Fragment>\n            <button\n              style={{\n                cursor: currentPage !== 1 ? \"pointer\" : \"not-allowed\",\n                background: currentPage !== 1 ? \"#32de57\" : \"#303847\",\n              }}\n              onClick={() => newPage(\"previous\")}\n            >\n              Prev Page\n            </button>\n            <button onClick={() => newPage(\"next\")}>Next Page</button>\n          </React.Fragment>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  .container {\n    &:nth-child(1) {\n      height: 80px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      button {\n        border: none;\n        outline: none;\n        background: #32de57;\n        color: #fff;\n        font-size: 20px;\n        font-weight: 600;\n        border-radius: 4px;\n        width: 160px;\n        padding: 10px 0;\n        cursor: pointer;\n        user-select: none;\n        margin: 0 10px;\n        transition: background 500ms ease-in-out;\n        &:hover {\n          background: #259a3e;\n        }\n      }\n    }\n  }\n`;\n\nexport default MoviesPagination;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useContext } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\n\nconst PopularMovies = () => {\n  const { popularMovies } = useContext(MovieContext);\n\n  return (\n    <div css={styles} className=\"popularMovies\">\n      <Container>\n        {popularMovies.results &&\n          popularMovies.results.map((popularMovieItem, index) => (\n            <img\n              key={index}\n              src={`https://image.tmdb.org/t/p/w400/${popularMovieItem.poster_path}`}\n              alt=\"poster\"\n            />\n          ))}\n      </Container>\n    </div>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  .container {\n    &:nth-child(1) {\n      height: 81vh;\n      overflow-y: scroll;\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      &::-webkit-scrollbar {\n        width: 0;\n      }\n      .error {\n        font-size: 38px;\n        color: red;\n        height: 32px;\n      }\n    }\n    img {\n      width: 100%;\n      max-width: 240px;\n      height: 360px;\n      margin: 10px 0;\n    }\n  }\n  @media (max-width: 600px) {\n    .container {\n      img {\n        max-width: 100%;\n        height: 500px;\n      }\n    }\n  }\n  @media (min-width: 601px) and (max-width: 854px) {\n    .container {\n      img {\n        max-width: 48%;\n      }\n    }\n  }\n  @media (min-width: 855px) and (max-width: 1144px) {\n    .container {\n      img {\n        max-width: 31%;\n      }\n    }\n  }\n  @media (min-width: 1145px) and (max-width: 1365px) {\n    .container {\n      img {\n        max-width: 23.4%;\n      }\n    }\n  }\n`;\n\nexport default PopularMovies;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport React, { useContext } from \"react\";\nimport { MovieContext } from \"../../Context/MovieContext\";\nimport Container from \"../GlobalComponents/Container\";\nimport Movies from \"../Movies/Movies\";\nimport MoviesPagination from \"../Movies/MoviesPagination\";\nimport Popular from \"../Popular/Popular\";\n\nconst Output = () => {\n  const { activeLink } = useContext(MovieContext);\n\n  return (\n    <div css={styles} className=\"output\">\n      {activeLink === \"All Movies\" && (\n        <Container>\n          <React.Fragment>\n            <Movies />\n            <MoviesPagination />\n          </React.Fragment>\n        </Container>\n      )}\n      {activeLink === \"Popular\" && (\n        <Container>\n          <Popular />\n        </Container>\n      )}\n    </div>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  min-height: calc(100vh - 80px);\n  display: flex;\n  > .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n  @media (max-width: 1365px) {\n    > .container {\n      max-width: 90%;\n    }\n  }\n`;\n\nexport default Output;\n","/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport HeroNav from \"./HeroNav/HeroNav\";\nimport Output from \"../Output/Output\";\n\nconst Hero = () => {\n  return (\n    <section css={styles} className=\"hero\">\n      <HeroNav />\n      <Output />\n    </section>\n  );\n};\n\nconst styles = css`\n  width: 100%;\n  min-height: 100vh;\n  background: #1b1c22;\n`;\n\nexport default Hero;\n","import React from \"react\";\nimport { MovieState } from \"./Context/MovieContext\";\nimport Hero from \"./components/Hero/Hero\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <MovieState>\n      <Hero />\n    </MovieState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}